version: '3.9'

services:

  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    restart: always 
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # nginx['enable'] = false
        external_url 'http://localhost/gitlab/'
        # gitlab_rails['smtp_enable'] = true
        # gitlab_rails['smtp_address'] = 'smtp.gmail.com'
        # gitlab_rails['smtp_port'] = 587
        # gitlab_rails['smtp_user_name'] = 'your_email@gmail.com'
        # gitlab_rails['smtp_password'] = 'your_password'
        # gitlab_rails['smtp_domain'] = 'smtp.gmail.com'
        # gitlab_rails['smtp_authentication'] = 'login'
        # gitlab_rails['smtp_enable_starttls_auto'] = true
        # gitlab_rails['smtp_tls'] = false
        # gitlab_rails['smtp_openssl_verify_mode'] = 'none'
        # gitlab_rails['gitlab_shell_ssh_port'] = 2222
        # gitlab_rails['gitlab_shell_ssh_host'] = 'localhost'
        # letsencrypt['enable'] = true
        # letsencrypt['contact_emails'] = ['salste.jesse@gmail.com']
    ports:
      - "5000:80"
      # - "80:80"
      # - "443:443"
      # - "2222:22"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    # hostname: dev.codebased.fi
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=true
      #- JENKINS_OPTS="--httpPort=-1 --httpsPort=8443" #--httpsCertificate=/etc/letsencrypt/live/dev.codebased.fi/fullchain.pem --httpsPrivateKey=/etc/letsencrypt/live/dev.codebased.fi/privkey.pem"
      - JENKINS_OPTS="--prefix=/jenkins" # NEEDED FOR GETTING THE PREFIX CORRECTLY WORKING WITH NGINX REVERSE PROXY
    ports:
      - "8080:8080"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - db
    restart: always
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      - SONAR_WEB_CONTEXT=/sonarqube
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs

  db:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - postgresql:/var/lib/postgresql


  nginx:
    image: nginx
    container_name: nginx_lb
    depends_on:
      - sonarqube
      - certbot
      - jenkins
      - gitlab
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /run/NGINX-RP-for-containers-cloudinit/data/certbot/conf:/etc/letsencrypt
      - /run/NGINX-RP-for-containers-cloudinit/data/certbot/www:/var/www/certbot
      - /run/NGINX-RP-for-containers-cloudinit/data/nginx:/etc/nginx/conf.d

  certbot:
    image: certbot/certbot:latest
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - /run/NGINX-RP-for-containers-cloudinit/data/certbot/www:/var/www/certbot/
      - /run/NGINX-RP-for-containers-cloudinit/data/certbot/conf:/etc/letsencrypt/

volumes:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  jenkins_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data: