# THIS IS RECOMMENDED
# ensures that you don't get the DEFAULT events object, which can fuck up your NGINX server, because it configures some default settings
# Setting this to empty fixed my problem where I could not connect to Jenkins through the NGINX reverse proxy.
events {}

# Complete Nginx Docker reverse proxy config file
http {
  upstream jenkins {
    server jenkins:8080;
  }

  upstream gitlab {
    server gitlab:5000;
  }

  upstream sonarqube {
    server sonarqube:9000;
  }

  server {
    listen 80;
    server_name localhost;
    # server_name codebased.fi

    location /jenkins {
      proxy_pass http://jenkins;

      #? Pretty useful... 
      #? This proxy_bind binds $server_addr to the outgoing connection (the request) that will be going to the backend server.
      #? This means that the backend/upstream server sees that it is getting a request with its own IP Address.
      #? ^ This ensures that the backend/upstream server gets the request and it is not blocked by a Firewall/IP-based access control.
      #? The $server_addr refers to the IP address of the server that is processing the client's request.
      proxy_bind $server_addr;

      #? This sets the X_Forwarded_Prefix header to /jenkins
      #? Basically when this is set, every response from the Jenkins upstream/backend server will include the path component /jenkins
      #? For example www.localhost.com/jenkins/login and so on...
      #? YOU CAN CONFIGURE THIS PREFIX IN THE JENKINS DOCKER CONTAINER ENVIRONMENT VARIABLES. The header below is not required to set.
      #? ^ JENKINS_OPTS="--prefix=/jenkins" 
      #  proxy_set_header X-Forwarded-Prefix /jenkins;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      #? This sets the "Host" header to be $host
      #? The "Host" header specifies the host name and port number of server to which the request is being sent to.
      #? In this example, the $host variable would be localhost if user makes a request to localhost
      #? REMEMBER, if the client makes a connection to www.localhost.com/jenkins, the $host WILL STILL be www.localhost.com
      #? The path component ("/jenkins") is not included in the $host variable.

      #? If the request does not include a Host header, or if the Host header is set to a different value than the actual host name of the
      #? upstream server, the upstream server may not be able to properly handle the request.
      # proxy_set_header Host $host/jenkins; ^ The above is the reason why this won't work 
      proxy_set_header Host $host;

      # Good routing practice because this ensures that the backend server (e.g., Jenkins) gets the REAL IP Address and not 
      # a proxy/load-balancer's IP address that sits in front of NGINX server.
      # Without this, NGINX sets a default source IP address that will be from the client that connects to NGINX. Hence why the above point.
      proxy_set_header X-Real-IP $remote_addr;
    }
  } 

  server {
    listen 80;
    server_name localhost;
    # server_name codebased.fi

    location /gitlab {
      proxy_pass http://gitlab;

      #? Pretty useful... 
      #? This proxy_bind binds $server_addr to the outgoing connection (the request) that will be going to the backend server.
      #? This means that the backend/upstream server sees that it is getting a request with its own IP Address.
      #? ^ This ensures that the backend/upstream server gets the request and it is not blocked by a Firewall/IP-based access control.
      #? The $server_addr refers to the IP address of the server that is processing the client's request.
      proxy_bind $server_addr;

      #? This sets the X_Forwarded_Prefix header to /jenkins
      #? Basically when this is set, every response from the Jenkins upstream/backend server will include the path component /jenkins
      #? For example www.localhost.com/jenkins/login and so on...
      #? YOU CAN CONFIGURE THIS PREFIX IN THE JENKINS DOCKER CONTAINER ENVIRONMENT VARIABLES. The header below is not required to set.
      #? ^ JENKINS_OPTS="--prefix=/jenkins" 
      #  proxy_set_header X-Forwarded-Prefix /jenkins;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      #? This sets the "Host" header to be $host
      #? The "Host" header specifies the host name and port number of server to which the request is being sent to.
      #? In this example, the $host variable would be localhost if user makes a request to localhost
      #? REMEMBER, if the client makes a connection to www.localhost.com/jenkins, the $host WILL STILL be www.localhost.com
      #? The path component ("/jenkins") is not included in the $host variable.
      #? If the request does not include a Host header, or if the Host header is set to a different value than the actual host name of the
      #? upstream server, the upstream server may not be able to properly handle the request.
      # proxy_set_header Host $host/jenkins; ^ The above is the reason why this won't work 
      proxy_set_header Host $host;

      # Good routing practice because this ensures that the backend server (e.g., Jenkins) gets the REAL IP Address and not 
      # a proxy/load-balancer's IP address that sits in front of NGINX server.
      # Without this, NGINX sets a default source IP address that will be from the client that connects to NGINX. Hence why the above point.
      proxy_set_header X-Real-IP $remote_addr;
    }
  } 

  server {
    listen 80;
    server_name localhost;
    # server_name codebased.fi

    location /sonarqube {
      proxy_pass http://sonarqube;

      #? Pretty useful... 
      #? This proxy_bind binds $server_addr to the outgoing connection (the request) that will be going to the backend server.
      #? This means that the backend/upstream server sees that it is getting a request with its own IP Address.
      #? ^ This ensures that the backend/upstream server gets the request and it is not blocked by a Firewall/IP-based access control.
      #? The $server_addr refers to the IP address of the server that is processing the client's request.
      proxy_bind $server_addr;

      #? This sets the X_Forwarded_Prefix header to /jenkins
      #? Basically when this is set, every response from the Jenkins upstream/backend server will include the path component /jenkins
      #? For example www.localhost.com/jenkins/login and so on...
      #? YOU CAN CONFIGURE THIS PREFIX IN THE JENKINS DOCKER CONTAINER ENVIRONMENT VARIABLES. The header below is not required to set.
      #? ^ JENKINS_OPTS="--prefix=/jenkins" 
    #    proxy_set_header X-Forwarded-Prefix /sonarqube;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      #? This sets the "Host" header to be $host
      #? The "Host" header specifies the host name and port number of server to which the request is being sent to.
      #? In this example, the $host variable would be localhost if user makes a request to localhost
      #? REMEMBER, if the client makes a connection to www.localhost.com/jenkins, the $host WILL STILL be www.localhost.com
      #? The path component ("/jenkins") is not included in the $host variable.

      #? If the request does not include a Host header, or if the Host header is set to a different value than the actual host name of the
      #? upstream server, the upstream server may not be able to properly handle the request.
      # proxy_set_header Host $host/jenkins; ^ The above is the reason why this won't work 
      proxy_set_header Host $host;

      # Good routing practice because this ensures that the backend server (e.g., Jenkins) gets the REAL IP Address and not 
      # a proxy/load-balancer's IP address that sits in front of NGINX server.
      # Without this, NGINX sets a default source IP address that will be from the client that connects to NGINX. Hence why the above point.
      proxy_set_header X-Real-IP $remote_addr;
    }
  } 
}
